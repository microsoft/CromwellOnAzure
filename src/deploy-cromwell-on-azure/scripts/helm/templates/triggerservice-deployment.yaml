apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    io.kompose.service: triggerservice
  name: triggerservice
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: triggerservice
  strategy: {}
  template:
    metadata:
      labels:
        io.kompose.service: triggerservice
        azure.workload.identity/use: "true"
    spec:
      serviceAccountName: {{ .Values.identity.name }}-sa
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        supplementalGroups: [1000]
        appArmorProfile:
          type: RuntimeDefault
      containers:
        - env:
            - name: TesPostgreSql__ServerName
              value: {{ .Values.tesDatabase.serverName }}
            - name: TesPostgreSql__ServerNameSuffix
              value: {{ .Values.tesDatabase.serverNameSuffix }}
            - name: TesPostgreSql__ServerSslMode
              value: {{ .Values.tesDatabase.serverSslMode }}
            - name: TesPostgreSql__ServerPort
              value: {{ .Values.tesDatabase.serverPort | quote }}
            - name: TesPostgreSql__DatabaseName
              value: {{ .Values.tesDatabase.databaseName }}
            - name: TesPostgreSql__DatabaseUserLogin
              value: {{ .Values.tesDatabase.databaseUserLogin }}
            - name: TesPostgreSql__DatabaseUserPassword
              value: {{ .Values.tesDatabase.databaseUserPassword }}
            - name: TriggerService__DefaultStorageAccountName
              value: {{ .Values.persistence.storageAccount }}
            - name: AzureServicesAuthConnectionString
              value: {{ .Values.config.azureServicesAuthConnectionString }}
            - name: AZURE_ADDITIONALLY_ALLOWED_TENANTS
              value: "*"
            - name: TriggerService__ApplicationInsightsAccountName
              value: {{ .Values.config.applicationInsightsAccountName }}
            - name: TriggerService__AzureCloudName
              value: {{ .Values.config.azureCloudName }}
          image: {{ .Values.images.triggerservice }}
          name: triggerservice
          resources:
            requests:
              cpu: "0.5"
              memory: "256Mi"
            limits:
              cpu: "2.0"
              memory: "1024Mi"
          securityContext:
            allowPrivilegeEscalation: false
      restartPolicy: Always
status: {}
